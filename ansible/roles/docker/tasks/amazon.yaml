---
# Install packages
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/package_module.html
- name: "Task:: ansible.builtin.package --> docker"
  ansible.builtin.package:
    # List of package names to be installed. Ensure these packages are present on the system.
    name:
      - docker
      - python3-pip
    # State of the packages. 'present' ensures the packages are installed.
    state: present

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/package_module.html
- name: "Task:: ansible.builtin.package --> docker"
  ansible.builtin.package:
    # List of package names to be installed. Ensure these packages are present on the system.
    name:
      - python3-requests
    # State of the packages. 'present' ensures the packages are installed.
    state: absent

# Install Python packages
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/pip_module.html
- name: "Task:: ansible.builtin.pip --> docker"
  ansible.builtin.pip:
    # List of Python packages to be installed. Ensure these packages are present.
    name:
      - docker
    # State of the Python packages. 'present' ensures the packages are installed.
    state: present

# Create /etc/docker directory
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
- name: "Task:: ansible.builtin.file --> /etc/docker"
  ansible.builtin.file:
    # Path of the file or directory being managed. Ensures the directory exists.
    path: /etc/docker
    # State of the path. 'directory' ensures the path is a directory.
    state: directory
    # Permissions of the directory. '0644' sets the directory permissions.
    mode: "0644"

# Add docker users
- name: "Task: ansible.builtin.user:: group: docker"
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: true
  with_items: "{{ docker_users }}"

# Copy Docker configuration files
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
- name: "Task:: ansible.builtin.template --> docker configuration files"
  ansible.builtin.template:
    # Source file(s) to be copied. Iterates over the items in the list.
    src: "{{ item }}"
    # Destination path for the copied files.
    dest: /{{ item }}
    # Permissions for the copied files. '0644' sets the file permissions.
    mode: "0644"
  with_items:
    - "etc/docker/daemon.json"
    - "lib/systemd/system/docker.service"
  # Notify handler to restart Docker service after copying files.
  notify:
    - "Task:: ansible.builtin.service --> restart docker"

# Reload systemd to recognize the new service
- name: "Task:: ansible.builtin.systemd --> Reload systemd"
  ansible.builtin.systemd:
    daemon_reload: true

# Flush handlers
- name: Flush handlers
  ansible.builtin.meta: flush_handlers

# Manage Docker service
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html
- name: "Task:: ansible.builtin.service --> docker"
  ansible.builtin.service:
    # Name of the service. Manages the 'docker' service.
    name: docker
    # Desired state of the service. 'started' ensures the service is running.
    state: started
    # Ensures the service is enabled at boot.
    enabled: true
