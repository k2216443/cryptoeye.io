version: "0.2"
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 292875404443.dkr.ecr.us-west-2.amazonaws.com/cryptoeye
      - IMAGE_TAG=$(cat version)-$(git describe --always --long)
  build:
    commands:
      - cd src/api
      - echo Building image 292875404443.dkr.ecr.us-west-2.amazonaws.com/cryptoeye:$IMAGE_TAG
      - docker build -t 292875404443.dkr.ecr.us-west-2.amazonaws.com/cryptoeye:${IMAGE_TAG}  .
  post_build:
    commands:
      - echo Pushing to ECR...
      - docker push 292875404443.dkr.ecr.us-west-2.amazonaws.com/cryptoeye:${IMAGE_TAG} 
      - TG_TOKEN=$(aws ssm get-parameter --name "/cryptoeye/telegram_bot_token" --with-decryption --query Parameter.Value --output text)
      - TG_CHAT_ID=$(aws ssm get-parameter --name "/cryptoeye/telegram_chat_id" --query Parameter.Value --output text)
      - MSG="292875404443.dkr.ecr.us-west-2.amazonaws.com/cryptoeye:${IMAGE_TAG}"
      - curl -sS -X POST "https://api.telegram.org/bot${TG_TOKEN}/sendMessage"  --data-urlencode "chat_id=${TG_CHAT_ID}" --data-urlencode "text=${MSG}" --data-urlencode "disable_web_page_preview=true"
      - echo "292875404443.dkr.ecr.us-west-2.amazonaws.com/cryptoeye:${IMAGE_TAG}" > image-detail.json

artifacts:
  files:
    - image-detail.json